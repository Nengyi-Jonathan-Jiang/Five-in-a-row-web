!function(){"use strict";class t{constructor(t,e,i,s=!0){this.canvas=document.createElement("canvas"),this.w=this.canvas.width=t||window.innerWidth,this.h=this.canvas.height=e||window.innerHeight,i&&i.appendChild&&i.appendChild(this.canvas),this.ctx=this.canvas.getContext("2d",{alpha:s})||(t=>{throw Error("Unable to create canvas rendering context")})(),this.ctx.textAlign="center",this.parent=i,this.textOptions={"font-style":"normal","font-variant":"normal","font-weight":"normal","font-size":"12em","line-height":"1","font-family":"system-ui"}}set width(t){this.resize(t,this.h)}get width(){return this.w}set height(t){this.resize(this.w,t)}get height(){return this.h}resize(t,e){this.canvas.width=this.w=t||this.canvas.clientWidth,this.canvas.height=this.h=e||this.canvas.clientHeight}resizeToParent(){this.parent&&this.resize(this.parent.clientWidth,this.parent.clientHeight)}resizeToWindow(){this.resize(window.innerWidth,window.innerHeight)}setDrawColor(t){this.ctx.strokeStyle=this.ctx.fillStyle=t}setStrokeColor(t){this.ctx.strokeStyle=t}setFillColor(t){this.ctx.fillStyle=t}setStrokeWidth(t){this.ctx.lineWidth=t}beginPath(){this.ctx.beginPath()}moveTo(t,e){this.ctx.moveTo(t,e)}lineTo(t,e){this.ctx.lineTo(t,e)}arc(t,e,i,s,h,a=!1){this.ctx.arc(t,e,i,2*s*Math.PI,2*h*Math.PI,a)}stroke(){this.ctx.stroke()}fill(){this.ctx.fill()}closePath(){this.ctx.closePath()}clear(t){this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),t?(this.setFillColor(t),this.ctx.fillRect(0,0,this.w,this.h)):this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height),this.ctx.restore()}line(t,e,i,s){this.ctx.beginPath(),this.ctx.moveTo(t,e),this.ctx.lineTo(i,s),this.ctx.stroke(),this.ctx.closePath()}fillRect(t,e,i,s){this.ctx.fillRect(t,e,i-t,s-e)}drawRect(t,e,i,s){this.ctx.beginPath(),this.ctx.rect(t,e,i-t,s-e),this.ctx.stroke(),this.ctx.closePath()}fillSquare(t,e,i){this.ctx.fillRect(t,e,i,i)}square(t,e,i){this.ctx.beginPath(),this.ctx.rect(t,e,i,i),this.ctx.stroke(),this.ctx.closePath()}fillCircle(t,e,i){this.ctx.beginPath(),this.ctx.arc(t,e,i,0,2*Math.PI),this.ctx.fill(),this.ctx.closePath()}circle(t,e,i){this.ctx.beginPath(),this.ctx.arc(t,e,i-this.ctx.lineWidth/2,0,2*Math.PI),this.ctx.stroke(),this.ctx.closePath()}fillArc(t,e,i,s,h,a=!1){this.beginPath(),this.moveTo(t,e),this.arc(t,e,i,s,h),this.fill(),this.closePath()}drawArc(t,e,i,s,h,a=!1){this.ctx.beginPath(),this.ctx.moveTo(t,e),this.ctx.arc(t,e,i,2*s*Math.PI,2*h*Math.PI,a),this.ctx.stroke(),this.ctx.closePath()}fillDoubleArc(t,e,i,s,h,a,c=!1){this.ctx.beginPath(),this.ctx.arc(t,e,i,2*h*Math.PI,2*a*Math.PI),this.ctx.arc(t,e,s,2*a*Math.PI,2*h*Math.PI,c),this.ctx.fill(),this.ctx.closePath()}setFont(t,e,i,s,h){t&&(this.textOptions["font-family"]=t),null!=e&&(this.textOptions["font-style"]=e?"italic":"normal"),null!=i&&(this.textOptions["font-weight"]=i?"bold":"normal"),null!=s&&(this.textOptions["line-height"]=s.toString()),null!=h&&(this.textOptions["font-variant"]=h?"small_caps":"normal")}fillText(t,e,i,s){this.ctx.beginPath(),this.ctx.font=[this.textOptions["font-variant"],this.textOptions["font-weight"],s+"px",this.textOptions["font-family"]].join(" "),this.ctx.textAlign="center",this.ctx.fillText(t,e,i),this.ctx.closePath()}strokeText(t,e,i,s){this.ctx.beginPath(),this.ctx.font=[this.textOptions["font-variant"],this.textOptions["font-weight"],s+"px",this.textOptions["font-family"]].join(" "),this.ctx.textAlign="center",this.ctx.strokeText(t,e,i),this.ctx.closePath()}polygon(t,e){this.ctx.beginPath(),this.ctx.moveTo(e[e.length-1][0]+t[0],e[e.length-1][1]+t[1]);let i=this;e.forEach(e=>i.ctx.lineTo(e[0]+t[0],e[1]+t[1])),this.ctx.stroke(),this.ctx.closePath()}fillPolygon(t,e){this.ctx.beginPath(),this.ctx.moveTo(e[e.length-1][0]+t[0],e[e.length-1][1]+t[1]);let i=this;e.forEach(e=>i.ctx.lineTo(e[0]+t[0],e[1]+t[1])),this.ctx.fill(),this.ctx.closePath()}squircle(t,e,i,s=5){this.ctx.beginPath(),this.ctx.arc(t+i/2-s,e-i/2+s,s,3*Math.PI/2,0*Math.PI/2),this.ctx.arc(t+i/2-s,e+i/2-s,s,0*Math.PI/2,1*Math.PI/2),this.ctx.arc(t-i/2+s,e+i/2-s,s,1*Math.PI/2,2*Math.PI/2),this.ctx.arc(t-i/2+s,e-i/2+s,s,2*Math.PI/2,3*Math.PI/2),this.ctx.lineTo(t+i/2-s,e-i/2),this.ctx.stroke(),this.ctx.closePath()}fillSquircle(t,e,i,s=5){this.ctx.beginPath(),this.ctx.arc(t+i/2-s,e-i/2+s,s,3*Math.PI/2,0*Math.PI/2),this.ctx.arc(t+i/2-s,e+i/2-s,s,0*Math.PI/2,1*Math.PI/2),this.ctx.arc(t-i/2+s,e+i/2-s,s,1*Math.PI/2,2*Math.PI/2),this.ctx.arc(t-i/2+s,e-i/2+s,s,2*Math.PI/2,3*Math.PI/2),this.ctx.lineTo(t+i/2-s,e-i/2),this.ctx.fill(),this.ctx.closePath()}spline(t){this.ctx.beginPath(),this.ctx.moveTo(t[0][0],t[0][1]);let e,i,s=0,h=0,a=0,c=0,o=0,n=t[0];for(let l=1;l<t.length;l++)e=t[l],(i=t[l+1])&&(s=(n[1]-e[1])/(n[0]-e[0]),o=(c=.3*-(i[0]-e[0]))*s*.6),this.ctx.bezierCurveTo(n[0]-h,n[1]-a,e[0]+c,e[1]+o,e[0],e[1]),h=c,a=o,n=e;this.ctx.stroke(),this.ctx.closePath()}bezier(t,e,i){this.ctx.beginPath(),this.ctx.moveTo(...t),this.ctx.quadraticCurveTo(...e,...i),this.ctx.stroke(),this.ctx.closePath()}drawImage(t,e,i){t.width*t.height==0&&console.log(t),this.ctx.drawImage(t,e,i)}drawScaledImage(t,e,i,s=1){this.ctx.drawImage(t,e,i,s*t.width,s*t.height)}drawImageWithWidth(t,e,i,s){let h=s/t.width*t.height;this.ctx.drawImage(t,e,i,s,h)}drawImageWithHeight(t,e,i,s){let h=s/t.height*t.width;this.ctx.drawImage(t,e,i,h,s)}drawImageOnRect(t,e,i,s,h){let a=~~(s-e),c=~~(h-i);this.ctx.drawImage(t,e,i,a,c)}pushState(){this.ctx.save()}restoreState(){this.ctx.restore()}rotate(t,e=!0,i=0,s=0){this.ctx.translate(-i,-s),this.ctx.rotate(e?t:-t),this.ctx.translate(i,s)}translate(t,e){this.ctx.translate(t,e)}static createAnimation(t){let e=0;const i=s=>{t(.001*s,.001*(e-s))||(e=s,requestAnimationFrame(i))};requestAnimationFrame(i)}}class e{constructor(t,e){this.first=t,this.second=e}}var i;!function(t){t[t.EMPTY=0]="EMPTY",t[t.PLAYER=1]="PLAYER",t[t.OPPONENT=2]="OPPONENT"}(i||(i={}));class s{constructor(t){this.opponent=new h(this),this.display=t,this.resetBoard()}static get BOARD_SIZE(){return 13}onKey(t){82==t&&this.resetBoard()}click(t,e){t<0||t>=s.BOARD_SIZE||e<0||e>=s.BOARD_SIZE||this.board[t][e]!=i.EMPTY||this.playerMove(t,e)}playerMove(t,e){switch(this.board[t][e]=i.PLAYER,this.display.paint(),this.gameWon()){case 1:this.display.onWin();break;case 3:this.display.onDraw()}this.opponentMove()}opponentMove(){switch(this.opponent.move(),this.display.paint(),this.gameWon()){case 2:this.display.onLose();break;case 3:this.display.onDraw()}}resetBoard(){this.board=new Array(s.BOARD_SIZE).fill(0).map(t=>new Array(s.BOARD_SIZE).fill(i.EMPTY))}gameWon(){return/.*XXXXX.*/.test(this.getRows())||/.*XXXXX.*/.test(this.getCols())||/.*XXXXX.*/.test(this.getDiagonals(!1))||/.*XXXXX.*/.test(this.getDiagonals(!0))?1:/.*OOOOO.*/.test(this.getRows())||/.*OOOOO.*/.test(this.getCols())||/.*OOOOO.*/.test(this.getDiagonals(!1))||/.*OOOOO.*/.test(this.getDiagonals(!0))?2:this.isFull()?3:0}getPieceAt(t,e){return this.board[t][e]}hasPieceAt(t,e){return this.board[t][e]!=i.EMPTY}setPieceAt(t,e,i,s){t==this.opponent&&(this.board[e][i]=s)}isEmpty(){for(let t of this.board)for(let e of t)if(e!=i.EMPTY)return!1;return!0}isFull(){for(let t of this.board)for(let e of t)if(e==i.EMPTY)return!1;return!0}getDiagonals(t){let e,i,h,a,c="",o=s.BOARD_SIZE;for(e=o-1;e>0;e--){for(i=0,h=e;h<o;i++,h++)c+=s.m.get(this.board[t?o-h-1:h][i]);c+="|"}for(e=0;e<o;e++){for(i=0,a=e;a<o;i++,a++)c+=s.m.get(this.board[t?o-i-1:i][a]);c+="|"}return c}getRows(){let t,e,i="",h=s.BOARD_SIZE;for(t=0;t<h;t++){for(e=0;e<h;e++)i+=s.m.get(this.board[t][e]);i+="|"}return i.toString()}getCols(){let t,e,i="",h=s.BOARD_SIZE;for(t=0;t<h;t++){for(e=0;e<h;e++)i+=s.m.get(this.board[e][t]);i+="|"}return i}}s.m=new Map([[i.EMPTY,"_"],[i.PLAYER,"X"],[i.OPPONENT,"O"]]);class h{constructor(t){this.logic=t}move(){const t=s.BOARD_SIZE;if(this.logic.isEmpty())return void this.logic.setPieceAt(this,t/2,t/2,i.OPPONENT);let h=[],a=Number.NEGATIVE_INFINITY;for(let s=0;s<t;s++)for(let c=0;c<t;c++){if(this.logic.hasPieceAt(s,c))continue;this.logic.setPieceAt(this,s,c,i.OPPONENT);let t=this.score();t>a?(h=[new e(s,c)],a=t):t==a&&h.push(new e(s,c)),this.logic.setPieceAt(this,s,c,i.EMPTY)}var c=h[~~(Math.random()*h.length)];this.logic.setPieceAt(this,c.first,c.second,i.OPPONENT)}score(){let t=0,e=this.logic.getRows()+this.logic.getCols()+this.logic.getDiagonals(!0)+this.logic.getDiagonals(!1);for(let i of h.SCORING_MAP.entries())t+=(e.match(i[0])||{length:0}).length*i[1];return t}}h.SCORING_MAP=new Map([[/OOOOO/,1e9],[/XXXX_/,-1e8],[/XXX_X/,-1e8],[/XX_XX/,-1e8],[/X_XXX/,-1e8],[/_XXXX/,-1e8],[/_OOOO_/,2e7],[/OOO_O/,1e7],[/OO_OO/,1e7],[/O_OOO/,1e7],[/_OOOO/,1e7],[/_XXX__/,-1e6],[/__XXX_/,-1e6],[/_XX_X_/,-1e6],[/_X_XX_/,-1e6],[/_XXX_/,-5e5],[/_OOO__/,1e5],[/__OOO_/,1e5],[/_OO_O_/,1e5],[/_O_OO_/,1e5],[/_OOO_/,5e4],[/__OO__/,1200],[/_OO__/,1e3],[/__OO_/,1e3],[/XXO_/,500],[/_OXX/,500],[/__XX_/,-1100],[/_XX__/,-1100],[/OXO/,-100],[/OX/,1],[/XO/,1]]),new class{constructor(){this.SIZE=800,this.LEFT_OFFSET=0,this.TOP_OFFSET=0,this.logic=new s(this),this.canvas=new t(0,0,document.body),this.canvas.canvas.addEventListener("click",t=>this.onMouseDown(t.clientX,t.clientY)),window.addEventListener("keypress",t=>this.onKeyPressed(t.keyCode)),window.addEventListener("resize",t=>this.canvas.resizeToWindow()),t.createAnimation(t=>this.paint())}paint(){const t=this.canvas.width,e=this.canvas.height,h=this.SIZE=Math.min(t,e),a=this.LEFT_OFFSET=t-h>>1,c=this.TOP_OFFSET=e-h>>1,o=s.BOARD_SIZE,n=~~(h/o/2);this.canvas.clear("#000"),this.canvas.setFillColor("rgb(200,200,200)"),this.canvas.fillRect(a,c,a+h,c+h),this.canvas.setDrawColor("#000");for(let i=0;i<=o;i++){const s=i*h/o;this.canvas.line(a,c+s,t-a,c+s),this.canvas.line(a+s,c,a+s,e-c)}const l=~~(h/o/9);for(let t=0;t<s.BOARD_SIZE;t++)for(let e=0;e<s.BOARD_SIZE;e++){const s=a+t*h/o,r=c+e*h/o;switch(this.logic.getPieceAt(t,e)){case i.PLAYER:this.canvas.circle(s+n,r+n,n-l);break;case i.OPPONENT:this.canvas.fillCircle(s+n,r+n,n-l)}}}onWin(){document.getElementById("game-result").dataset.result="win",document.getElementById("game-result").onclick=(t=>{t.target instanceof HTMLElement&&(t.target.dataset.result="null"),this.logic.resetBoard()})}onLose(){document.getElementById("game-result").dataset.result="lose",document.getElementById("game-result").onclick=(t=>{t.target instanceof HTMLElement&&(t.target.dataset.result="null"),this.logic.resetBoard()})}onDraw(){document.getElementById("game-result").dataset.result="draw",document.getElementById("game-result").onclick=(t=>{t.target instanceof HTMLElement&&(t.target.dataset.result="null"),this.logic.resetBoard()})}onKeyPressed(t){this.logic.onKey(t)}onMouseDown(t,e){this.logic.click(~~(s.BOARD_SIZE*(t-this.LEFT_OFFSET)/this.SIZE),~~(s.BOARD_SIZE*(e-this.TOP_OFFSET)/this.SIZE))}}}();